/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.ecommerce.view.estoque;

import br.com.ecommerce.classes.CarregaDadosModeloGerente;
import br.com.ecommerce.classes.PosicaoInternalFrame;
import br.com.ecommerce.classes.Produto;
import br.com.ecommerce.dao.ProdutoDAO;
import br.com.ecommerce.enumeracoes.EstadoProduto;
import br.com.ecommerce.tables.ModeloMainGerente;
import br.com.ecommerce.tables.ModeloMainUsuario;
import br.com.ecommerce.view.login.JTextFieldHint;
import java.awt.Color;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author marco
 */
public class TelaAlterarEstoque extends PosicaoInternalFrame {

    /**
     * Creates new form TelaAlterarEstoque
     */
    
    private ModeloMainUsuario modelo;
    private final ModeloMainGerente MODELO;
    
    public TelaAlterarEstoque(ModeloMainGerente modelo_gerente) {
        initComponents();
        setResizable(false);
        this.MODELO = modelo_gerente;
        btn_alterarestoque_enviar.setEnabled(false);
        modelo = new ModeloMainUsuario();
        tabela_alterarestoque.setModel(modelo);
        suporteCarregaDados();
    }
    
    private void suporteCarregaDados() {
        try {
            List<Produto> lista;
            if((lista = new ProdutoDAO().listaProdutosUsuario(true, -1)) != null)
                for(Produto aux : lista)
                    modelo.addProduto(aux, true);
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Ocorreu algum erro no banco de dados");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela_alterarestoque = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        in_alterarestoque_quantidade = new JTextFieldHint(new JTextField(), "", "Quantidade");
        btn_alterarestoque_enviar = new javax.swing.JButton();
        btn_alterarestoque_cancelar = new javax.swing.JButton();
        btn_alterarestoque_alterar = new javax.swing.JButton();

        setClosable(true);

        jPanel1.setBackground(new java.awt.Color(18, 7, 67));

        tabela_alterarestoque.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabela_alterarestoque);

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Quantidade em estoque");

        in_alterarestoque_quantidade.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        in_alterarestoque_quantidade.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btn_alterarestoque_enviar.setBackground(new java.awt.Color(255, 255, 255));
        btn_alterarestoque_enviar.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        btn_alterarestoque_enviar.setText("Enviar");
        btn_alterarestoque_enviar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btn_alterarestoque_enviar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_alterarestoque_enviar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_alterarestoque_enviarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_alterarestoque_enviarMouseExited(evt);
            }
        });
        btn_alterarestoque_enviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_alterarestoque_enviarActionPerformed(evt);
            }
        });

        btn_alterarestoque_cancelar.setBackground(new java.awt.Color(255, 255, 255));
        btn_alterarestoque_cancelar.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        btn_alterarestoque_cancelar.setText("Cancelar");
        btn_alterarestoque_cancelar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btn_alterarestoque_cancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_alterarestoque_cancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_alterarestoque_cancelarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_alterarestoque_cancelarMouseExited(evt);
            }
        });
        btn_alterarestoque_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_alterarestoque_cancelarActionPerformed(evt);
            }
        });

        btn_alterarestoque_alterar.setBackground(new java.awt.Color(255, 255, 255));
        btn_alterarestoque_alterar.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        btn_alterarestoque_alterar.setText("Alterar");
        btn_alterarestoque_alterar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btn_alterarestoque_alterar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_alterarestoque_alterar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_alterarestoque_alterarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_alterarestoque_alterarMouseExited(evt);
            }
        });
        btn_alterarestoque_alterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_alterarestoque_alterarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(in_alterarestoque_quantidade))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_alterarestoque_alterar, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_alterarestoque_enviar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_alterarestoque_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(119, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(in_alterarestoque_quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_alterarestoque_alterar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_alterarestoque_enviar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_alterarestoque_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_alterarestoque_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_alterarestoque_cancelarActionPerformed
        dispose();
    }//GEN-LAST:event_btn_alterarestoque_cancelarActionPerformed

    private void btn_alterarestoque_enviarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_alterarestoque_enviarMouseEntered
        btn_alterarestoque_enviar.setForeground(Color.WHITE);
        btn_alterarestoque_enviar.setBackground(Color.GREEN);
    }//GEN-LAST:event_btn_alterarestoque_enviarMouseEntered

    private void btn_alterarestoque_enviarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_alterarestoque_enviarMouseExited
        btn_alterarestoque_enviar.setForeground(Color.BLACK);
        btn_alterarestoque_enviar.setBackground(Color.WHITE);
    }//GEN-LAST:event_btn_alterarestoque_enviarMouseExited

    private void btn_alterarestoque_cancelarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_alterarestoque_cancelarMouseEntered
        btn_alterarestoque_cancelar.setForeground(Color.WHITE);
        btn_alterarestoque_cancelar.setBackground(Color.RED);
    }//GEN-LAST:event_btn_alterarestoque_cancelarMouseEntered

    private void btn_alterarestoque_cancelarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_alterarestoque_cancelarMouseExited
        btn_alterarestoque_cancelar.setForeground(Color.BLACK);
        btn_alterarestoque_cancelar.setBackground(Color.WHITE);
    }//GEN-LAST:event_btn_alterarestoque_cancelarMouseExited

    private void btn_alterarestoque_alterarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_alterarestoque_alterarMouseEntered
        btn_alterarestoque_alterar.setForeground(Color.WHITE);
        btn_alterarestoque_alterar.setBackground(new Color(102,102,255));
    }//GEN-LAST:event_btn_alterarestoque_alterarMouseEntered

    private void btn_alterarestoque_alterarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_alterarestoque_alterarMouseExited
        btn_alterarestoque_alterar.setForeground(Color.BLACK);
        btn_alterarestoque_alterar.setBackground(Color.WHITE);
    }//GEN-LAST:event_btn_alterarestoque_alterarMouseExited

    private void btn_alterarestoque_alterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_alterarestoque_alterarActionPerformed
        
        int index = tabela_alterarestoque.getSelectedRow();
        if(index == -1){
            JOptionPane.showMessageDialog(null, "Por favor, selecione um produto");
            return;
        }
        
        btn_alterarestoque_enviar.setEnabled(true);
        in_alterarestoque_quantidade.setText(modelo.quantidadeProduto(index).toString());
        
    }//GEN-LAST:event_btn_alterarestoque_alterarActionPerformed

    private void btn_alterarestoque_enviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_alterarestoque_enviarActionPerformed
        
        String sQnt = in_alterarestoque_quantidade.getText();
        if(sQnt.equals("")){
            JOptionPane.showMessageDialog(null, "Por favor, informe a quantidade");
            return;
        }
        
        Integer qnt = null;
        try {
            qnt = Integer.parseInt(sQnt);
        } catch(NumberFormatException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Por favor, informe uma quantidade válida (apenas números)");
        }
        if(qnt<0){
            JOptionPane.showMessageDialog(null, "Por favor, informe um valor positivo");
            return;
        }
        
        Integer qntOld = modelo.quantidadeProduto(tabela_alterarestoque.getSelectedRow()); 
        if(qnt == qntOld){
            JOptionPane.showMessageDialog(null, "Não houve alteração na quantidade");
            return;
        }
        
        Produto p = modelo.getProdutoIndex(tabela_alterarestoque.getSelectedRow());
        if(qnt > qntOld){
            p.setSituacao(EstadoProduto.ESTOQUE);
            for(int i=0 ; i<(qnt-qntOld) ; i++){
                if(qntOld == 0){
                    try {
                        new ProdutoDAO().atualizarProduto(p);
                    } catch (SQLException e){
                        e.printStackTrace();
                        JOptionPane.showMessageDialog(null, "Ocorreu algum erro no banco de dados");
                    }
                    qntOld = -1;
                } else {
                    try {
                        new ProdutoDAO().addProduto(p);
                    } catch (SQLException e){
                        e.printStackTrace();
                        JOptionPane.showMessageDialog(null, "Ocorreu algum erro no banco de dados");
                    }
                }
            }
            JOptionPane.showMessageDialog(null, "Quantidade alterada com sucesso!");
            new Thread(new CarregaDadosModeloGerente(MODELO)).start();
            dispose();
        } else {
            List<Produto> list = null;
            try {
                list = new ProdutoDAO().unidadesMesmoProduto(p.getNome(), p.getDescricao(), 
                        p.getCategoria(), p.getPreco());
            } catch (SQLException e){
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Ocorreu algum erro no banco de dados");
            }
            int i = 0;
            Produto produto;
            if(qnt == 0){
                int resposta = JOptionPane.showConfirmDialog(null, "Deseja manter uma unidade como Fora de Estoque?", 
                        "Confirmação de alteração", JOptionPane.YES_NO_OPTION);
                if(resposta == JOptionPane.YES_OPTION){
                    boolean salvo = false;
                    do {
                        produto = list.get(i);
                        if(!salvo && produto.getSituacao() == EstadoProduto.ESTOQUE){
                            salvo = true;
                            produto.setSituacao(EstadoProduto.FORA_ESTOQUE);
                            try {
                                new ProdutoDAO().atualizarProduto(produto);
                            } catch (SQLException e){
                                e.printStackTrace();
                                JOptionPane.showMessageDialog(null, "Ocorreu algum erro no banco de dados");
                            }
                        }else if(produto.getSituacao() == EstadoProduto.ESTOQUE){
                            try {
                                new ProdutoDAO().deletarProduto(produto.getId_produto());
                            } catch (SQLException e){
                                e.printStackTrace();
                                JOptionPane.showMessageDialog(null, "Ocorreu algum erro no banco de dados");
                            }
                        }
                        i++;
                    } while(i<list.size());
                    JOptionPane.showMessageDialog(null, "Operação finalizada com sucesso!");
                    new Thread(new CarregaDadosModeloGerente(MODELO)).start();
                    dispose();
                    return;
                }
            }
            int qntRemovida=0;
            qnt = qntOld - qnt;
            i=0;
            do {
                produto = list.get(i);
                if(produto != null && produto.getSituacao() == EstadoProduto.ESTOQUE){
                    try {
                        new ProdutoDAO().deletarProduto(produto.getId_produto());
                        qntRemovida++;
                    } catch (SQLException e){
                        e.printStackTrace();
                        JOptionPane.showMessageDialog(null, "Ocorreu algum erro no banco de dados");
                    }
                }
                i++;
            } while(i<list.size() && qntRemovida<qnt && produto != null);
            if(qntRemovida == 0){
                JOptionPane.showMessageDialog(null, "Não foi possível remover as unidades");
                dispose();
                return;
            }
            JOptionPane.showMessageDialog(null, qnt+" unidades removidas com sucesso!");
            new Thread(new CarregaDadosModeloGerente(MODELO)).start();
            dispose();
        }
        
    }//GEN-LAST:event_btn_alterarestoque_enviarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_alterarestoque_alterar;
    private javax.swing.JButton btn_alterarestoque_cancelar;
    private javax.swing.JButton btn_alterarestoque_enviar;
    private javax.swing.JTextField in_alterarestoque_quantidade;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabela_alterarestoque;
    // End of variables declaration//GEN-END:variables
}
